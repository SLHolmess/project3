pipeline {
    agent {
        label 'master'
    }

    environment {
      GITURL= 'https://github.com/hoangviet148/k8s-microservices.git'
      IMAGE = "14802000/books"
      IMAGE_REGISTRY = "https://index.docker.io/v1/"
      registryCredential = 'hoangviet148-dockerhub'
      gitCredential = "hoangviet148-github"
      gitCredentialssh = "hoangviet148-github-sshkey"
      private_ssh_key_path = "/root/.ssh/id_rsa"

      // deployment repo
      BUILD_USER = 'hoangviet148'
      BUILD_USER_EMAIL = 'nnvvhh148@gmail.com'
      DEPLOYMENT_URL = 'git@github.com:hoangviet148/k8s-microservices.git'
    }

    stages {
        stage('Check-out GIT'){
            steps{
                git credentialsId: "$gitCredential", url: "$GITURL"
            }
        }

        stage('build-image'){
            steps {
                script {
                    env.TIMESTRAP = sh(returnStdout: true, script: 'date +%Y%m%d%H%M%S').trim()
                    env.DOCKER_TAG = "${TIMESTRAP}_${BUILD_NUMBER}"
                    sh 'docker build ./services/books -t $IMAGE:$DOCKER_TAG'
                }
            }
        }   

        stage("push Image ") {
            steps{
                script {
                    docker.withRegistry( "$IMAGE_REGISTRY", registryCredential ) {
                    sh 'docker push $IMAGE:$DOCKER_TAG'
                    }
                }
            }
        }

        stage("update docker tag") {
            steps {
                    withCredentials([sshUserPrivateKey(credentialsId: '$$gitCredentialssh', keyFileVariable: '$$private_ssh_key_path')]) {
                    sh """
                        git config --global user.name "$BUILD_USER"
                        git config --global user.email "$BUILD_USER_EMAIL"
                        rm -rf k8s-microservices
                        git clone ${DEPLOYMENT_URL} && cd k8s-microservices && \
                        sed -i "s#$IMAGE.*#${IMAGE}:${DOCKER_TAG}#g" k8s-config/booksbooks-deployment.yaml && \
                        git add -A && git commit -m "update tag: ${DOCKER_TAG}" && git push ${DEPLOYMENT_URL}
                    """
                }
            }
        }    
    }

    post { 
      always {
            echo  "End pipeline"
        }
    }
}
